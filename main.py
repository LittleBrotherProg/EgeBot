import telebot
from telebot import types
import config
import pars
with open('token.txt') as token:
	token = token.read()
bot = telebot.TeleBot(token, 
		            parse_mode=None)

params = ['–¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å', '–†–∞–∑–≤—ë—Ä–Ω—É—Ç–∞—è —á–∞—Å—Ç—å', '–ó–∞–¥–∞–Ω–∏—è, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ –ï–ì–≠ —ç—Ç–æ–≥–æ –≥–æ–¥–∞']
@bot.message_handler(commands=['start'], content_types=['text'])
def send_welcome(message):
	markup_welcom = types.ReplyKeyboardMarkup(resize_keyboard=True)
	btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
	btn2 = types.KeyboardButton("–í—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞")
	markup_welcom.add(btn1, btn2)
	bot.send_message(
					message.chat.id, 
		  			text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –∫ —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏ –ï–ì–≠',
                    reply_markup=markup_welcom
					)
@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–ª—å–∑—É–µ—à—Å—è –º–Ω–æ–π!)")
    elif(message.text == "–í—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞"):
        markup = types.InlineKeyboardMarkup(row_width=3)
        btn1 = types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", callback_data=[params[0,2], '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'])
        btn2 = types.InlineKeyboardButton("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data='but2')
        btn3 = types.InlineKeyboardButton("–§–∏–∑–∏–∫–∞", callback_data='but3')
        btn4 = types.InlineKeyboardButton("–•–∏–º–∏—è", callback_data='but4')
        btn5 = types.InlineKeyboardButton("–ë–∏–æ–ª–æ–≥–∏—è", callback_data='but5')
        btn6 = types.InlineKeyboardButton("–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data='but6')
        btn7 = types.InlineKeyboardButton("–û–±—â–µ—Å—Ç–≤–æ –∑–Ω–∞–Ω–∏–µ", callback_data='but7')
        btn8 = types.InlineKeyboardButton("–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", callback_data='but8')
        btn9 = types.InlineKeyboardButton("–ò—Å—Ç–æ—Ä–∏—è", callback_data='but9')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
     if call.data[0] == params[0,1] and call.data[1] == :
            new_menu = types.ReplyKeyboardMarkup()
            test02 = types.KeyboardButton('–¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å',)
            new_menu.add(types.InlineKeyboardButton('–ù–∏—á–µ–≥–æ –Ω–æ–≤–æ–≥–æ', callback_data='but4'))
            bot.edit_message_text('–ù–æ–≤–æ–µ –º–µ–Ω—é, –∫–Ω–æ–ø–∫–∞ 1', call.message.chat.id, call.message.message_id,
                              reply_markup=new_menu)
         
    # elif(message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"):
    #     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #     btn1 = types.KeyboardButton("–¢–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å")
    #     btn2 = types.KeyboardButton("–ó–∞–¥–∞–Ω–∏—è, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ –ï–ì–≠ —ç—Ç–æ–≥–æ –≥–æ–¥–∞")
    #     btn3 = types.KeyboardButton("–†–∞–∑–≤—ë—Ä–Ω—É—Ç–∞—è —á–∞—Å—Ç—å")
    #     markup.add(btn1, btn2, back)
    #     bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ", reply_markup=markup)
    #     u = pars.pars_link('https://inf-ege.sdamgia.ru/')
    #     answer = u.pars_link_task()
    #     for i, button in enumerate(answer):
    #         print(button['link task'])
    #         print('-' * 20)
    # elif (message.text == "–ù–∞–∑–∞–¥"):
    #     bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é",reply_markup=None)
            
             
	
bot.infinity_polling()